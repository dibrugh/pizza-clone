import { FormProvider, useForm } from "react-hook-form";
import { formLoginSchema, FormLoginSchema } from "./schemas";
import { zodResolver } from "@hookform/resolvers/zod";
import { FormInput, Title } from "../../..";
import { Button } from "@/shared/components";
import toast from "react-hot-toast";
import { signIn } from "next-auth/react";

type Props = {
	onClose?: VoidFunction;
};

export const LoginForm = ({ onClose }: Props) => {
	const form = useForm<FormLoginSchema>({
		resolver: zodResolver(formLoginSchema),
		defaultValues: {
			email: "",
			password: "",
		},
	});

	const onSubmit = async (data: FormLoginSchema) => {
		try {
			const resp = await signIn("credentials", {
				...data,
				redirect: false,
			});

			if (!resp?.ok) {
				throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–∏ÃÜ—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç");
			}

			toast.success("–í—ã –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç", {
				icon: "ü•≥",
			});
			onClose?.();
		} catch (error) {
			console.log("Error [LoginForm]: ", error);
			toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–∏ÃÜ—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç", {
				icon: "ü•≤",
			});
		}
	};
	return (
		<FormProvider {...form}>
			<form
				className="flex flex-col gap-5"
				onSubmit={form.handleSubmit(onSubmit)}
				autoComplete="off"
			>
				<div className="flex justify-between items-center">
					<div className="mr-2">
						<Title text="–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç" size="md" className="font-bold" />
						<p className="text-gray-400">
							–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç
						</p>
					</div>
					<img
						src="/assets/images/phone-icon.png"
						alt="phone-icon"
						width={60}
						height={60}
					/>
				</div>

				<FormInput name="email" label="E-Mail" required />
				<FormInput name="password" label="–ü–∞—Ä–æ–ª—å" type="password" required />

				<Button
					loading={form.formState.isSubmitting}
					className="h-12 text-base"
					type="submit"
				>
					–í–æ–∏ÃÜ—Ç–∏
				</Button>
			</form>
		</FormProvider>
	);
};
